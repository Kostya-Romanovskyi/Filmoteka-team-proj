{"mappings":"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","sources":["src/js/trends-and-search.js","src/js/scroll_button.js","src/js/modal.js"],"sourcesContent":["const API_KEY = '63240915768e2fa639cf91287e69284e';\nconst TRENDING_TIME = 'week';\nlet genres = [];\n\nconst formEl = document.querySelector('.search-form');\nconst message = document.querySelector('.message');\nconst markupContainer = document.querySelector('.movie-markup');\nconst loaderContainer = document.querySelector('.loader-container');\n\nformEl.addEventListener('submit', search);\n\n// фетчим тренди та жанри\nif (!localStorage['genres']) {\n  getGenres();\n}\n// genres = JSON.parse(localStorage.getItem('localGenres'));\n// genres = JSON.parse(localStorage['localGenres']);\ntrending();\n\nfunction search(evt) {\n  evt.preventDefault();\n  let page = 1;\n  const inputValue = formEl.elements.searchQuery.value;\n  console.log(formEl.elements);\n  if (!inputValue) {\n    return;\n  }\n\n  const fetchMovies = async () => {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${inputValue}&page=${page}`\n    );\n    const movies = await response.json();\n    return movies;\n  };\n\n  loaderContainer.hidden = false;\n  fetchMovies()\n    .then(movies => {\n      if (!movies.total_results) {\n        message.textContent =\n          'Search result not successful. Enter the correct movie name and';\n        throw new Error(\n          'Search result not successful. Enter the correct movie name and'\n        );\n      }\n\n      localStorage.setItem(\n        'currentPage',\n        JSON.stringify({\n          type: 'serched',\n          result: movies,\n        })\n      );\n      render(movies.results);\n    })\n    .catch(error => {\n      console.log(error);\n    })\n    .finally(() => {\n      loaderContainer.hidden = true;\n    });\n}\n\nfunction trending() {\n  const fetchTrending = async () => {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/trending/movie/${TRENDING_TIME}?api_key=${API_KEY}`\n    );\n    const movies = await response.json();\n    return movies;\n  };\n\n  loaderContainer.hidden = false;\n\n  fetchTrending()\n    .then(movies => {\n      localStorage.setItem(\n        'currentPage',\n        JSON.stringify({\n          type: 'trending',\n          result: movies,\n        })\n      );\n      genres = JSON.parse(localStorage.getItem('localGenres'));\n      render(movies.results);\n    })\n    .catch(error => {\n      console.log(error);\n    })\n    .finally(() => {\n      loaderContainer.hidden = true;\n    });\n}\n\nfunction render(movies) {\n  markupContainer.innerHTML = movies\n    .map(movie => {\n      // заглушка для відсутньої картинки\n      const imageSrc = !movie.poster_path\n        ? 'https://image.tmdb.org/t/p/w500'\n        : `https://image.tmdb.org/t/p/w500${movie.poster_path}`;\n\n      // const cardGenres = genres\n      //   .filter(genre => {\n      //     if (movie.genre_ids.includes(genre.id)) {\n      //       return genre.name;\n      //     }\n      //   })\n      //   .map(genre => genre.name)\n      //   .join(' ');\n      // console.log(cardGenres);\n\n      const cardGenres = genres.reduce((previousValue, genre) => {\n        if (movie.genre_ids.includes(genre.id)) {\n          console.log(previousValue);\n          return previousValue + genre.name + ' ';\n        }\n        return previousValue;\n      }, '');\n\n      return `\n        <a class=\"card__link\" href=\"\">\n        <li class=\"card__item\" data-id=${movie.id}>\n        <img class=\"card__img\" src=\"${imageSrc}\" alt=\"${movie.title}\">\n        <div>\n        <p class=\"card__title\">${movie.title}</p>\n        <div class=\"card__container\">\n        <p class=\"card__genres\">${cardGenres}</p>\n        <p class=\"card__year\">${parseInt(movie.release_date) ?? ''}</p>\n        </div>\n        </div>\n        </li>\n        </a>`;\n    })\n    .join('');\n}\n\nfunction getGenres() {\n  const fetchGenres = async () => {\n    const response = await fetch(\n      `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`\n    );\n    const movies = await response.json();\n    return movies;\n  };\n\n  fetchGenres()\n    .then(data => {\n      console.log(typeof JSON.stringify(data.genres));\n      localStorage.setItem('localGenres', JSON.stringify(data.genres));\n    })\n    .catch(error => {\n      console.log(error);\n    });\n}\n","const btnUp = {\n  el: document.querySelector('.btn-up'),\n  scrolling: false,\n  show() {\n    if (\n      this.el.classList.contains('btn-up_hide') &&\n      !this.el.classList.contains('btn-up_hiding')\n    ) {\n      this.el.classList.remove('btn-up_hide');\n      this.el.classList.add('btn-up_hiding');\n      window.setTimeout(() => {\n        this.el.classList.remove('btn-up_hiding');\n      }, 300);\n    }\n  },\n  hide() {\n    if (\n      !this.el.classList.contains('btn-up_hide') &&\n      !this.el.classList.contains('btn-up_hiding')\n    ) {\n      this.el.classList.add('btn-up_hiding');\n      window.setTimeout(() => {\n        this.el.classList.add('btn-up_hide');\n        this.el.classList.remove('btn-up_hiding');\n      }, 300);\n    }\n  },\n  addEventListener() {\n    window.addEventListener('scroll', () => {\n      const scrollY = window.scrollY || document.documentElement.scrollTop;\n      if (this.scrolling && scrollY > 0) {\n        return;\n      }\n      this.scrolling = false;\n      if (scrollY > 400) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    });\n    document.querySelector('.btn-up').onclick = () => {\n      this.scrolling = true;\n      this.hide();\n      window.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth',\n      });\n    };\n  },\n};\n\nbtnUp.addEventListener();\n","const openModal = document.querySelector('.movie-markup');\n\nconst modal = document.querySelector('[data-modal]');\nconst modalMarkup = document.querySelector('.modal-film');\n\nlet closeModalBtn = '';\n\nopenModal.addEventListener('click', onOpenModalClick);\n\nfunction onOpenModalClick(e) {\n  e.preventDefault();\n  const movieId = e.target.closest('li').getAttribute('data-id');\n\n  if (e.target !== e.currentTarget) {\n    addMarkup(movieId);\n\n    closeModalBtn = document.querySelector('.close-modal');\n    modal.classList.remove('is-hidden');\n    document.body.classList.add('overflow');\n    document.addEventListener('keydown', onEscClose);\n\n    closeModalBtn.addEventListener('click', onCloseModalClick);\n    modal.addEventListener('click', onBackdropClick);\n  }\n}\n\nfunction addMarkup(id) {\n  const savedSettings = localStorage.getItem('currentPage');\n  const savedGenres = localStorage.getItem('localGenres');\n  try {\n    const parsedSettings = JSON.parse(savedSettings);\n    const parsedGenres = JSON.parse(savedGenres);\n\n    const movieItem = parsedSettings.result.results.filter(\n      a => a.id === Number(id)\n    )[0];\n\n    const genreId = [];\n\n    parsedGenres.map(a => {\n      if (movieItem.genre_ids.includes(a.id)) {\n        genreId.push(a.name);\n      }\n    });\n\n    const imageSrc = !movieItem.poster_path\n      ? 'https://www.theoxygenstore.com/images/source/No-image.jpg'\n      : `https://image.tmdb.org/t/p/w500${movieItem.poster_path}`;\n\n    modalMarkup.innerHTML = `<div class=\"modal-film__content\">\n      <button class=\"close-modal\" type=\"button\">\n        <svg class=\"close__icon\" width=\"14\" height=\"14\">\n          <use href=\"./images/home/close.svg#close-icon\"></use>\n        </svg>\n      </button>\n      <img\n        class=\"modal-film__poster\"\n       \n        src=\"${imageSrc}\"\n        alt=${movieItem.title}\n        width=\"240\"\n        height=\"357\"\n      />\n      <h2 class=\"title-film\">${movieItem.title}</h2>\n      <ul class=\"modal-film__list\">\n        <li class=\"modal-film__item\">\n          <span class=\"item__label\">Vote / Votes</span>\n          <span class=\"item__content\"\n            ><span class=\"item__content--rating\">${\n              movieItem.vote_average\n            }</span> /<span\n              class=\"item__content--votes\"\n              >${movieItem.vote_count}</span\n            >\n          </span>\n        </li>\n        <li class=\"modal-film__item\">\n          <span class=\"item__label\">Popularity</span>\n          <span class=\"item__content\">${movieItem.popularity}</span>\n        </li>\n        <li class=\"modal-film__item\">\n          <span class=\"item__label\">Original Title</span>\n          <span class=\"item__content\">${movieItem.original_title}</span>\n        </li>\n        <li class=\"modal-film__item\">\n          <span class=\"item__label\">Genre</span>\n          <span class=\"item__content\">${genreId.join(', ')}</span>\n        </li>\n      </ul>\n      <div class=\"modal-film__about\">\n        <h3 class=\"about__title\">ABOUT</h3>\n        <p class=\"about__text\">\n          ${movieItem.overview}\n        </p>\n      </div>\n      <div class=\"modal-film__buttons\">\n        <button class=\"modal_film__btn\" type=\"button\">add to Watched</button>\n        <button class=\"modal_film__btn\" type=\"button\">add to queue</button>\n      </div>\n    </div>`;\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction onCloseModalClick(e) {\n  closeModal();\n}\n\nfunction onEscClose(e) {\n  if (e.key === 'Escape') {\n    closeModal();\n  }\n}\n\nfunction onBackdropClick(event) {\n  if (event.target === event.currentTarget) {\n    closeModal();\n  }\n}\n\nfunction closeModal() {\n  modal.classList.add('is-hidden');\n  document.body.classList.remove('overflow');\n  modal.removeEventListener('click', onBackdropClick);\n  document.removeEventListener('keydown', onEscClose);\n  closeModalBtn.removeEventListener('click', onCloseModalClick);\n}\n"],"names":["$ac0fe5be28a07c64$var$genres","$ac0fe5be28a07c64$var$formEl","document","querySelector","$ac0fe5be28a07c64$var$message","$ac0fe5be28a07c64$var$markupContainer","$ac0fe5be28a07c64$var$loaderContainer","$ac0fe5be28a07c64$var$render","movies","innerHTML","map","movie","imageSrc","poster_path","cardGenres","reduce","previousValue","genre","genre_ids","includes","id","console","log","name","ref","title","parseInt","release_date","join","addEventListener","evt","preventDefault","inputValue","elements","searchQuery","value","hidden","async","response","fetch","json","fetchMovies","then","total_results","textContent","Error","localStorage","setItem","JSON","stringify","type","result","results","catch","error","finally","fetchGenres","data","genres","fetchTrending","parse","getItem","el","scrolling","show","this","classList","contains","remove","add","window","setTimeout","hide","scrollY","documentElement","scrollTop","onclick","scrollTo","top","left","behavior","$8a7e756c566dd1ea$var$openModal","$8a7e756c566dd1ea$var$modal","$8a7e756c566dd1ea$var$modalMarkup","$8a7e756c566dd1ea$var$closeModalBtn","$8a7e756c566dd1ea$var$onCloseModalClick","e","$8a7e756c566dd1ea$var$closeModal","$8a7e756c566dd1ea$var$onEscClose","key","$8a7e756c566dd1ea$var$onBackdropClick","event","target","currentTarget","body","removeEventListener","movieId","closest","getAttribute","savedSettings","savedGenres","parsedSettings","parsedGenres","movieItem","filter","a","Number","genreId","push","vote_average","vote_count","popularity","original_title","overview","err","$8a7e756c566dd1ea$var$addMarkup"],"version":3,"file":"library.239d99a2.js.map"}